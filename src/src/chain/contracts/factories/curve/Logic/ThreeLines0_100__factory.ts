/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ThreeLines0_100,
  ThreeLines0_100Interface,
} from "../../../curve/Logic/ThreeLines0_100";

const _abi = [
  {
    inputs: [
      {
        internalType: "int256",
        name: "r0",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "r1",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "r2",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "s1",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "s2",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_r0",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_r1",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_r2",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_s1",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_s2",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x_value",
        type: "int256",
      },
    ],
    name: "valueAt",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161045a38038061045a83398101604081905261002f91610049565b600094909455600192909255600255600355600455610089565b600080600080600060a0868803121561006157600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b6103c2806100986000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063414be42b1461006757806347ba7b211461008c5780637785b71614610095578063825d3c4a1461009e5780639d830ef8146100a7578063d9394449146100b0575b600080fd5b61007a61007536600461021c565b6100b9565b60405190815260200160405180910390f35b61007a60005481565b61007a60025481565b61007a60015481565b61007a60035481565b61007a60045481565b6000808212156100fc5760405162461bcd60e51b81526020600482015260096024820152681d1bdbc81cdb585b1b60ba1b60448201526064015b60405180910390fd5b670de0b6b3a76400008213156101405760405162461bcd60e51b8152602060048201526009602482015268746f6f206c6172676560b81b60448201526064016100f3565b60035482121561017a576000805460015461015b919061024b565b9050600060035490506101728282866000546101cf565b949350505050565b6004548212156101c7576000600154600254610196919061024b565b905060006003546004546101aa919061024b565b90506101728282600354876101bf919061024b565b6001546101cf565b505060025490565b600080846101e087620f424061028a565b6101ea919061030f565b9050600083620f42406101fd878561028a565b610207919061030f565b610211919061034b565b979650505050505050565b60006020828403121561022e57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b60008083128015600160ff1b85018412161561026957610269610235565b6001600160ff1b038401831381161561028457610284610235565b50500390565b60006001600160ff1b03818413828413808216868404861116156102b0576102b0610235565b600160ff1b60008712828116878305891216156102cf576102cf610235565b600087129250878205871284841616156102eb576102eb610235565b8785058712818416161561030157610301610235565b505050929093029392505050565b60008261032c57634e487b7160e01b600052601260045260246000fd5b600160ff1b82146000198414161561034657610346610235565b500590565b600080821280156001600160ff1b038490038513161561036d5761036d610235565b600160ff1b839003841281161561038657610386610235565b5050019056fea26469706673582212206bd75fd14115049810ff4d61db72b4d8c3ea2d94c3da9911c97cc4ca37bacced64736f6c63430008090033";

type ThreeLines0_100ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ThreeLines0_100ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ThreeLines0_100__factory extends ContractFactory {
  constructor(...args: ThreeLines0_100ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    r0: BigNumberish,
    r1: BigNumberish,
    r2: BigNumberish,
    s1: BigNumberish,
    s2: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ThreeLines0_100> {
    return super.deploy(
      r0,
      r1,
      r2,
      s1,
      s2,
      overrides || {}
    ) as Promise<ThreeLines0_100>;
  }
  override getDeployTransaction(
    r0: BigNumberish,
    r1: BigNumberish,
    r2: BigNumberish,
    s1: BigNumberish,
    s2: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(r0, r1, r2, s1, s2, overrides || {});
  }
  override attach(address: string): ThreeLines0_100 {
    return super.attach(address) as ThreeLines0_100;
  }
  override connect(signer: Signer): ThreeLines0_100__factory {
    return super.connect(signer) as ThreeLines0_100__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ThreeLines0_100Interface {
    return new utils.Interface(_abi) as ThreeLines0_100Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ThreeLines0_100 {
    return new Contract(address, _abi, signerOrProvider) as ThreeLines0_100;
  }
}
