/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IAggregator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAggregator__factory>;
    getContractFactory(
      name: "CompLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompLike__factory>;
    getContractFactory(
      name: "ERC20Detailed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Detailed__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IVOTE",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVOTE__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "ERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Upgradeable__factory>;
    getContractFactory(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Upgradeable__factory>;
    getContractFactory(
      name: "CompInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CompInterface__factory>;
    getContractFactory(
      name: "GovernorAlpha",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorAlpha__factory>;
    getContractFactory(
      name: "GovernorBravoDelegateStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegateStorageV1__factory>;
    getContractFactory(
      name: "GovernorBravoDelegateStorageV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegateStorageV2__factory>;
    getContractFactory(
      name: "GovernorBravoDelegatorStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoDelegatorStorage__factory>;
    getContractFactory(
      name: "GovernorBravoEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorBravoEvents__factory>;
    getContractFactory(
      name: "TimelockInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TimelockInterface__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC20MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableUpgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "BeaconProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BeaconProxy__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "UpgradeableBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeableBeacon__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ProxyAdmin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyAdmin__factory>;
    getContractFactory(
      name: "TransparentUpgradeableProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TransparentUpgradeableProxy__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "IUniswapV3PoolDerivedState",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV3PoolDerivedState__factory>;
    getContractFactory(
      name: "CurveMaster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CurveMaster__factory>;
    getContractFactory(
      name: "ICurveMaster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICurveMaster__factory>;
    getContractFactory(
      name: "ICurveSlave",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICurveSlave__factory>;
    getContractFactory(
      name: "ThreeLines0_100",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ThreeLines0_100__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "Wave",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Wave__factory>;
    getContractFactory(
      name: "GovernorCharlieDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorCharlieDelegate__factory>;
    getContractFactory(
      name: "GovernorCharlieDelegator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorCharlieDelegator__factory>;
    getContractFactory(
      name: "GovernorCharlieDelegateStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorCharlieDelegateStorage__factory>;
    getContractFactory(
      name: "GovernorCharlieDelegatorStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorCharlieDelegatorStorage__factory>;
    getContractFactory(
      name: "GovernorCharlieEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorCharlieEvents__factory>;
    getContractFactory(
      name: "IGovernorCharlieDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernorCharlieDelegate__factory>;
    getContractFactory(
      name: "IGovernorCharlieDelegator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernorCharlieDelegator__factory>;
    getContractFactory(
      name: "IIpt",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IIpt__factory>;
    getContractFactory(
      name: "ITokenDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenDelegate__factory>;
    getContractFactory(
      name: "ITokenDelegator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenDelegator__factory>;
    getContractFactory(
      name: "TokenEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenEvents__factory>;
    getContractFactory(
      name: "InterestProtocolTokenDelegate",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InterestProtocolTokenDelegate__factory>;
    getContractFactory(
      name: "InterestProtocolToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InterestProtocolToken__factory>;
    getContractFactory(
      name: "TokenDelegateStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenDelegateStorageV1__factory>;
    getContractFactory(
      name: "TokenDelegatorStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenDelegatorStorage__factory>;
    getContractFactory(
      name: "IUSDI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUSDI__factory>;
    getContractFactory(
      name: "USDIEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.USDIEvents__factory>;
    getContractFactory(
      name: "IVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVault__factory>;
    getContractFactory(
      name: "VaultEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultEvents__factory>;
    getContractFactory(
      name: "IVaultController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVaultController__factory>;
    getContractFactory(
      name: "VaultControllerEvents",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultControllerEvents__factory>;
    getContractFactory(
      name: "Vault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vault__factory>;
    getContractFactory(
      name: "VaultController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultController__factory>;
    getContractFactory(
      name: "ChainlinkOracleRelay",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ChainlinkOracleRelay__factory>;
    getContractFactory(
      name: "UniswapV3OracleRelay",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV3OracleRelay__factory>;
    getContractFactory(
      name: "IOracleMaster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOracleMaster__factory>;
    getContractFactory(
      name: "IOracleRelay",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOracleRelay__factory>;
    getContractFactory(
      name: "AnchoredViewRelay",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AnchoredViewRelay__factory>;
    getContractFactory(
      name: "OracleMaster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleMaster__factory>;
    getContractFactory(
      name: "UFragments",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UFragments__factory>;
    getContractFactory(
      name: "USDI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.USDI__factory>;

    getContractAt(
      name: "IAggregator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAggregator>;
    getContractAt(
      name: "CompLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CompLike>;
    getContractAt(
      name: "ERC20Detailed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Detailed>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IVOTE",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVOTE>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "ERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Upgradeable>;
    getContractAt(
      name: "ERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Upgradeable>;
    getContractAt(
      name: "CompInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CompInterface>;
    getContractAt(
      name: "GovernorAlpha",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorAlpha>;
    getContractAt(
      name: "GovernorBravoDelegateStorageV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegateStorageV1>;
    getContractAt(
      name: "GovernorBravoDelegateStorageV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegateStorageV2>;
    getContractAt(
      name: "GovernorBravoDelegatorStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoDelegatorStorage>;
    getContractAt(
      name: "GovernorBravoEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorBravoEvents>;
    getContractAt(
      name: "TimelockInterface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TimelockInterface>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "IERC20MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20MetadataUpgradeable>;
    getContractAt(
      name: "IERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Upgradeable>;
    getContractAt(
      name: "IERC721MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "IERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "PausableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableUpgradeable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "BeaconProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BeaconProxy>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "UpgradeableBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeableBeacon>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ProxyAdmin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyAdmin>;
    getContractAt(
      name: "TransparentUpgradeableProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TransparentUpgradeableProxy>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "IUniswapV3PoolDerivedState",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV3PoolDerivedState>;
    getContractAt(
      name: "CurveMaster",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CurveMaster>;
    getContractAt(
      name: "ICurveMaster",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICurveMaster>;
    getContractAt(
      name: "ICurveSlave",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICurveSlave>;
    getContractAt(
      name: "ThreeLines0_100",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ThreeLines0_100>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "Wave",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Wave>;
    getContractAt(
      name: "GovernorCharlieDelegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorCharlieDelegate>;
    getContractAt(
      name: "GovernorCharlieDelegator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorCharlieDelegator>;
    getContractAt(
      name: "GovernorCharlieDelegateStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorCharlieDelegateStorage>;
    getContractAt(
      name: "GovernorCharlieDelegatorStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorCharlieDelegatorStorage>;
    getContractAt(
      name: "GovernorCharlieEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorCharlieEvents>;
    getContractAt(
      name: "IGovernorCharlieDelegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernorCharlieDelegate>;
    getContractAt(
      name: "IGovernorCharlieDelegator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernorCharlieDelegator>;
    getContractAt(
      name: "IIpt",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IIpt>;
    getContractAt(
      name: "ITokenDelegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenDelegate>;
    getContractAt(
      name: "ITokenDelegator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenDelegator>;
    getContractAt(
      name: "TokenEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenEvents>;
    getContractAt(
      name: "InterestProtocolTokenDelegate",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InterestProtocolTokenDelegate>;
    getContractAt(
      name: "InterestProtocolToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InterestProtocolToken>;
    getContractAt(
      name: "TokenDelegateStorageV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenDelegateStorageV1>;
    getContractAt(
      name: "TokenDelegatorStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenDelegatorStorage>;
    getContractAt(
      name: "IUSDI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUSDI>;
    getContractAt(
      name: "USDIEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.USDIEvents>;
    getContractAt(
      name: "IVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVault>;
    getContractAt(
      name: "VaultEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultEvents>;
    getContractAt(
      name: "IVaultController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVaultController>;
    getContractAt(
      name: "VaultControllerEvents",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultControllerEvents>;
    getContractAt(
      name: "Vault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Vault>;
    getContractAt(
      name: "VaultController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultController>;
    getContractAt(
      name: "ChainlinkOracleRelay",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ChainlinkOracleRelay>;
    getContractAt(
      name: "UniswapV3OracleRelay",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV3OracleRelay>;
    getContractAt(
      name: "IOracleMaster",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOracleMaster>;
    getContractAt(
      name: "IOracleRelay",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOracleRelay>;
    getContractAt(
      name: "AnchoredViewRelay",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AnchoredViewRelay>;
    getContractAt(
      name: "OracleMaster",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OracleMaster>;
    getContractAt(
      name: "UFragments",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UFragments>;
    getContractAt(
      name: "USDI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.USDI>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
