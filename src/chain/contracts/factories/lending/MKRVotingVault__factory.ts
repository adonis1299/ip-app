/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MKRVotingVault,
  MKRVotingVaultInterface,
} from "../../lending/MKRVotingVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint96",
        name: "id_",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "vault_address",
        type: "address",
      },
      {
        internalType: "address",
        name: "controller_address",
        type: "address",
      },
      {
        internalType: "address",
        name: "voting_controller_address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OnlyMKRVotingVaultController",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyMinter",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyVaultController",
    type: "error",
  },
  {
    inputs: [],
    name: "_mkrVotingVaultController",
    outputs: [
      {
        internalType: "contract MKRVotingVaultController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_vaultController",
    outputs: [
      {
        internalType: "contract IVaultController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "controllerTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "delegateMKRLikeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parentVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "undelegateMKRLike",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "votingVaultControllerTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a74380380610a7483398101604081905261002f916100b8565b604080518082019091526001600160601b039094168085526001600160a01b0393841660209095018590526c01000000000000000000000000909402909317600055600280549183166001600160a01b03199283161790556001805493909216921691909117905561011a565b80516001600160a01b03811681146100b357600080fd5b919050565b600080600080608085870312156100ce57600080fd5b84516001600160601b03811681146100e557600080fd5b93506100f36020860161009c565b92506101016040860161009c565b915061010f6060860161009c565b905092959194509250565b61094b806101296000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063af640d0f1161005b578063af640d0f146100f9578063b1290dad14610119578063b26923b81461012c578063cf3b1a181461013f57600080fd5b80630fe365361461008d5780632a69073a146100be57806360d8a423146100d35780639b504387146100e6575b600080fd5b600054600160601b90046001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100d16100cc3660046107ea565b610152565b005b6001546100a1906001600160a01b031681565b6100d16100f43660046107ea565b6102ee565b6000546040516bffffffffffffffffffffffff90911681526020016100b5565b6002546100a1906001600160a01b031681565b6100d161013a36600461082b565b610332565b6100d161014d3660046107ea565b610512565b60008001600c9054906101000a90046001600160a01b03166001600160a01b031663075461726040518163ffffffff1660e01b815260040160206040518083038186803b1580156101a257600080fd5b505afa1580156101b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101da9190610857565b6001600160a01b0316336001600160a01b03161461020b57604051639cdc2ed560e01b815260040160405180910390fd5b60405163095ea7b360e01b81526001600160a01b0384811660048301526024820183905283169063095ea7b390604401602060405180830381600087803b15801561025557600080fd5b505af1158015610269573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028d9190610874565b506040516337519c1960e21b8152600481018290526001600160a01b0384169063dd467064906024015b600060405180830381600087803b1580156102d157600080fd5b505af11580156102e5573d6000803e3d6000fd5b50505050505050565b6002546001600160a01b0316336001600160a01b03161461032257604051632b30c69960e11b815260040160405180910390fd5b61032d838383610546565b505050565b60008001600c9054906101000a90046001600160a01b03166001600160a01b031663075461726040518163ffffffff1660e01b815260040160206040518083038186803b15801561038257600080fd5b505afa158015610396573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ba9190610857565b6001600160a01b0316336001600160a01b0316146103eb57604051639cdc2ed560e01b815260040160405180910390fd5b6000826001600160a01b031663a2fca6b36040518163ffffffff1660e01b815260040160206040518083038186803b15801561042657600080fd5b505afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e9190610857565b60405163095ea7b360e01b81526001600160a01b038581166004830152602482018590529192509082169063095ea7b390604401602060405180830381600087803b1580156104ac57600080fd5b505af11580156104c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e49190610874565b5060405163d8ccd0f360e01b8152600481018390526001600160a01b0384169063d8ccd0f3906024016102b7565b6001546001600160a01b0316336001600160a01b03161461032257604051636eaa710160e11b815260040160405180910390fd5b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092018352602080830180516001600160e01b031663a9059cbb60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261032d928692916000916105d6918516908490610658565b80519091501561032d57808060200190518101906105f49190610874565b61032d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b60606106678484600085610671565b90505b9392505050565b6060824710156106d25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161064f565b843b6107205760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161064f565b600080866001600160a01b0316858760405161073c91906108c6565b60006040518083038185875af1925050503d8060008114610779576040519150601f19603f3d011682016040523d82523d6000602084013e61077e565b606091505b509150915061078e828286610799565b979650505050505050565b606083156107a857508161066a565b8251156107b85782518084602001fd5b8160405162461bcd60e51b815260040161064f91906108e2565b6001600160a01b03811681146107e757600080fd5b50565b6000806000606084860312156107ff57600080fd5b833561080a816107d2565b9250602084013561081a816107d2565b929592945050506040919091013590565b6000806040838503121561083e57600080fd5b8235610849816107d2565b946020939093013593505050565b60006020828403121561086957600080fd5b815161066a816107d2565b60006020828403121561088657600080fd5b8151801515811461066a57600080fd5b60005b838110156108b1578181015183820152602001610899565b838111156108c0576000848401525b50505050565b600082516108d8818460208701610896565b9190910192915050565b6020815260008251806020840152610901816040850160208701610896565b601f01601f1916919091016040019291505056fea2646970667358221220d9260398775cd85dc4071388e01e9f63387383559d9d14dd97f68797cef7945b64736f6c63430008090033";

type MKRVotingVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MKRVotingVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MKRVotingVault__factory extends ContractFactory {
  constructor(...args: MKRVotingVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    id_: PromiseOrValue<BigNumberish>,
    vault_address: PromiseOrValue<string>,
    controller_address: PromiseOrValue<string>,
    voting_controller_address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MKRVotingVault> {
    return super.deploy(
      id_,
      vault_address,
      controller_address,
      voting_controller_address,
      overrides || {}
    ) as Promise<MKRVotingVault>;
  }
  override getDeployTransaction(
    id_: PromiseOrValue<BigNumberish>,
    vault_address: PromiseOrValue<string>,
    controller_address: PromiseOrValue<string>,
    voting_controller_address: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      id_,
      vault_address,
      controller_address,
      voting_controller_address,
      overrides || {}
    );
  }
  override attach(address: string): MKRVotingVault {
    return super.attach(address) as MKRVotingVault;
  }
  override connect(signer: Signer): MKRVotingVault__factory {
    return super.connect(signer) as MKRVotingVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MKRVotingVaultInterface {
    return new utils.Interface(_abi) as MKRVotingVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MKRVotingVault {
    return new Contract(address, _abi, signerOrProvider) as MKRVotingVault;
  }
}
