/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AnchoredViewRelay,
  AnchoredViewRelayInterface,
} from "../../../oracle/Logic/AnchoredViewRelay";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "anchor_address",
        type: "address",
      },
      {
        internalType: "address",
        name: "main_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "widthNumerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "widthDenominator",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_anchorAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_anchorRelay",
    outputs: [
      {
        internalType: "contract IOracleRelay",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_mainAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_mainRelay",
    outputs: [
      {
        internalType: "contract IOracleRelay",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_widthDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_widthNumerator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161054e38038061054e83398101604081905261002f916100a2565b600080546001600160a01b039586166001600160a01b0319918216811790925560018054821690921790915560028054949095169381168417909455600380549094169092179092556004919091556005556100e5565b80516001600160a01b038116811461009d57600080fd5b919050565b600080600080608085870312156100b857600080fd5b6100c185610086565b93506100cf60208601610086565b6040860151606090960151949790965092505050565b61045a806100f46000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063698996f81161005b578063698996f8146100dc57806379a38ef6146100e457806388af30c3146100ed578063ac42ff101461010057600080fd5b806335d612251461008257806339ebe916146100b25780635ec6bfe5146100c5575b600080fd5b600354610095906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600154610095906001600160a01b031681565b6100ce60055481565b6040519081526020016100a9565b6100ce610113565b6100ce60045481565b600254610095906001600160a01b031681565b600054610095906001600160a01b031681565b600061011d610122565b905090565b600080600360009054906101000a90046001600160a01b03166001600160a01b031663698996f86040518163ffffffff1660e01b815260040160206040518083038186803b15801561017357600080fd5b505afa158015610187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ab9190610385565b9050600081116101f95760405162461bcd60e51b8152602060048201526014602482015273696e76616c6964206f7261636c652076616c756560601b60448201526064015b60405180910390fd5b60015460408051630d3132df60e31b815290516000926001600160a01b03169163698996f8916004808301926020929190829003018186803b15801561023e57600080fd5b505afa158015610252573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102769190610385565b9050600081116102bf5760405162461bcd60e51b8152602060048201526014602482015273696e76616c696420616e63686f722076616c756560601b60448201526064016101f0565b6000600554826004546102d291906103b4565b6102dc91906103d3565b905060006102ea82846103f5565b905060006102f8838561040d565b905081851061033b5760405162461bcd60e51b815260206004820152600f60248201526e0c2dcc6d0dee440e8dede40d0d2ced608b1b60448201526064016101f0565b80851161037b5760405162461bcd60e51b815260206004820152600e60248201526d616e63686f7220746f6f206c6f7760901b60448201526064016101f0565b5092949350505050565b60006020828403121561039757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156103ce576103ce61039e565b500290565b6000826103f057634e487b7160e01b600052601260045260246000fd5b500490565b600082198211156104085761040861039e565b500190565b60008282101561041f5761041f61039e565b50039056fea2646970667358221220b3543168ec6f95d52682853a11d0588f56082089df5ead1e3eec77ddd92d7c7f64736f6c63430008090033";

type AnchoredViewRelayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AnchoredViewRelayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AnchoredViewRelay__factory extends ContractFactory {
  constructor(...args: AnchoredViewRelayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anchor_address: string,
    main_address: string,
    widthNumerator: BigNumberish,
    widthDenominator: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AnchoredViewRelay> {
    return super.deploy(
      anchor_address,
      main_address,
      widthNumerator,
      widthDenominator,
      overrides || {}
    ) as Promise<AnchoredViewRelay>;
  }
  override getDeployTransaction(
    anchor_address: string,
    main_address: string,
    widthNumerator: BigNumberish,
    widthDenominator: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      anchor_address,
      main_address,
      widthNumerator,
      widthDenominator,
      overrides || {}
    );
  }
  override attach(address: string): AnchoredViewRelay {
    return super.attach(address) as AnchoredViewRelay;
  }
  override connect(signer: Signer): AnchoredViewRelay__factory {
    return super.connect(signer) as AnchoredViewRelay__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnchoredViewRelayInterface {
    return new utils.Interface(_abi) as AnchoredViewRelayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnchoredViewRelay {
    return new Contract(address, _abi, signerOrProvider) as AnchoredViewRelay;
  }
}
