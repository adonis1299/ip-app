/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../common";

export interface MKRVotingVaultInterface extends utils.Interface {
  functions: {
    "_mkrVotingVaultController()": FunctionFragment;
    "_vaultController()": FunctionFragment;
    "controllerTransfer(address,address,uint256)": FunctionFragment;
    "delegateMKRLikeTo(address,address,uint256)": FunctionFragment;
    "id()": FunctionFragment;
    "parentVault()": FunctionFragment;
    "undelegateMKRLike(address,uint256)": FunctionFragment;
    "votingVaultControllerTransfer(address,address,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "_mkrVotingVaultController"
      | "_mkrVotingVaultController()"
      | "_vaultController"
      | "_vaultController()"
      | "controllerTransfer"
      | "controllerTransfer(address,address,uint256)"
      | "delegateMKRLikeTo"
      | "delegateMKRLikeTo(address,address,uint256)"
      | "id"
      | "id()"
      | "parentVault"
      | "parentVault()"
      | "undelegateMKRLike"
      | "undelegateMKRLike(address,uint256)"
      | "votingVaultControllerTransfer"
      | "votingVaultControllerTransfer(address,address,uint256)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "_mkrVotingVaultController",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_mkrVotingVaultController()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_vaultController",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "_vaultController()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "controllerTransfer",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "controllerTransfer(address,address,uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "delegateMKRLikeTo",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "delegateMKRLikeTo(address,address,uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(functionFragment: "id", values?: undefined): string;
  encodeFunctionData(functionFragment: "id()", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "parentVault",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "parentVault()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "undelegateMKRLike",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "undelegateMKRLike(address,uint256)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "votingVaultControllerTransfer",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "votingVaultControllerTransfer(address,address,uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "_mkrVotingVaultController",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_mkrVotingVaultController()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_vaultController",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "_vaultController()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "controllerTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "controllerTransfer(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "delegateMKRLikeTo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "delegateMKRLikeTo(address,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "id", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "id()", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "parentVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "parentVault()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "undelegateMKRLike",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "undelegateMKRLike(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "votingVaultControllerTransfer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "votingVaultControllerTransfer(address,address,uint256)",
    data: BytesLike
  ): Result;

  events: {};
}

export interface MKRVotingVault extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MKRVotingVaultInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    _mkrVotingVaultController(overrides?: CallOverrides): Promise<[string]>;

    "_mkrVotingVaultController()"(overrides?: CallOverrides): Promise<[string]>;

    _vaultController(overrides?: CallOverrides): Promise<[string]>;

    "_vaultController()"(overrides?: CallOverrides): Promise<[string]>;

    controllerTransfer(
      _token: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "controllerTransfer(address,address,uint256)"(
      _token: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    delegateMKRLikeTo(
      delegatee: PromiseOrValue<string>,
      tokenAddress: PromiseOrValue<string>,
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "delegateMKRLikeTo(address,address,uint256)"(
      delegatee: PromiseOrValue<string>,
      tokenAddress: PromiseOrValue<string>,
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    id(overrides?: CallOverrides): Promise<[BigNumber]>;

    "id()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    parentVault(overrides?: CallOverrides): Promise<[string]>;

    "parentVault()"(overrides?: CallOverrides): Promise<[string]>;

    undelegateMKRLike(
      delegatee: PromiseOrValue<string>,
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "undelegateMKRLike(address,uint256)"(
      delegatee: PromiseOrValue<string>,
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    votingVaultControllerTransfer(
      _token: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "votingVaultControllerTransfer(address,address,uint256)"(
      _token: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  _mkrVotingVaultController(overrides?: CallOverrides): Promise<string>;

  "_mkrVotingVaultController()"(overrides?: CallOverrides): Promise<string>;

  _vaultController(overrides?: CallOverrides): Promise<string>;

  "_vaultController()"(overrides?: CallOverrides): Promise<string>;

  controllerTransfer(
    _token: PromiseOrValue<string>,
    _to: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "controllerTransfer(address,address,uint256)"(
    _token: PromiseOrValue<string>,
    _to: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  delegateMKRLikeTo(
    delegatee: PromiseOrValue<string>,
    tokenAddress: PromiseOrValue<string>,
    amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "delegateMKRLikeTo(address,address,uint256)"(
    delegatee: PromiseOrValue<string>,
    tokenAddress: PromiseOrValue<string>,
    amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  id(overrides?: CallOverrides): Promise<BigNumber>;

  "id()"(overrides?: CallOverrides): Promise<BigNumber>;

  parentVault(overrides?: CallOverrides): Promise<string>;

  "parentVault()"(overrides?: CallOverrides): Promise<string>;

  undelegateMKRLike(
    delegatee: PromiseOrValue<string>,
    amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "undelegateMKRLike(address,uint256)"(
    delegatee: PromiseOrValue<string>,
    amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  votingVaultControllerTransfer(
    _token: PromiseOrValue<string>,
    _to: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "votingVaultControllerTransfer(address,address,uint256)"(
    _token: PromiseOrValue<string>,
    _to: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    _mkrVotingVaultController(overrides?: CallOverrides): Promise<string>;

    "_mkrVotingVaultController()"(overrides?: CallOverrides): Promise<string>;

    _vaultController(overrides?: CallOverrides): Promise<string>;

    "_vaultController()"(overrides?: CallOverrides): Promise<string>;

    controllerTransfer(
      _token: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "controllerTransfer(address,address,uint256)"(
      _token: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    delegateMKRLikeTo(
      delegatee: PromiseOrValue<string>,
      tokenAddress: PromiseOrValue<string>,
      amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "delegateMKRLikeTo(address,address,uint256)"(
      delegatee: PromiseOrValue<string>,
      tokenAddress: PromiseOrValue<string>,
      amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    id(overrides?: CallOverrides): Promise<BigNumber>;

    "id()"(overrides?: CallOverrides): Promise<BigNumber>;

    parentVault(overrides?: CallOverrides): Promise<string>;

    "parentVault()"(overrides?: CallOverrides): Promise<string>;

    undelegateMKRLike(
      delegatee: PromiseOrValue<string>,
      amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "undelegateMKRLike(address,uint256)"(
      delegatee: PromiseOrValue<string>,
      amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    votingVaultControllerTransfer(
      _token: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "votingVaultControllerTransfer(address,address,uint256)"(
      _token: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    _mkrVotingVaultController(overrides?: CallOverrides): Promise<BigNumber>;

    "_mkrVotingVaultController()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    _vaultController(overrides?: CallOverrides): Promise<BigNumber>;

    "_vaultController()"(overrides?: CallOverrides): Promise<BigNumber>;

    controllerTransfer(
      _token: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "controllerTransfer(address,address,uint256)"(
      _token: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    delegateMKRLikeTo(
      delegatee: PromiseOrValue<string>,
      tokenAddress: PromiseOrValue<string>,
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "delegateMKRLikeTo(address,address,uint256)"(
      delegatee: PromiseOrValue<string>,
      tokenAddress: PromiseOrValue<string>,
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    id(overrides?: CallOverrides): Promise<BigNumber>;

    "id()"(overrides?: CallOverrides): Promise<BigNumber>;

    parentVault(overrides?: CallOverrides): Promise<BigNumber>;

    "parentVault()"(overrides?: CallOverrides): Promise<BigNumber>;

    undelegateMKRLike(
      delegatee: PromiseOrValue<string>,
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "undelegateMKRLike(address,uint256)"(
      delegatee: PromiseOrValue<string>,
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    votingVaultControllerTransfer(
      _token: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "votingVaultControllerTransfer(address,address,uint256)"(
      _token: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    _mkrVotingVaultController(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "_mkrVotingVaultController()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    _vaultController(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "_vaultController()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    controllerTransfer(
      _token: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "controllerTransfer(address,address,uint256)"(
      _token: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    delegateMKRLikeTo(
      delegatee: PromiseOrValue<string>,
      tokenAddress: PromiseOrValue<string>,
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "delegateMKRLikeTo(address,address,uint256)"(
      delegatee: PromiseOrValue<string>,
      tokenAddress: PromiseOrValue<string>,
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    id(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "id()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    parentVault(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "parentVault()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    undelegateMKRLike(
      delegatee: PromiseOrValue<string>,
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "undelegateMKRLike(address,uint256)"(
      delegatee: PromiseOrValue<string>,
      amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    votingVaultControllerTransfer(
      _token: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "votingVaultControllerTransfer(address,address,uint256)"(
      _token: PromiseOrValue<string>,
      _to: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
